<?php

/**
 * Address
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    tradeagent
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Address extends BaseAddress
{
     const URL = 'http://maps.googleapis.com/maps/api/geocode/json';


    public static function buildUrl($query)
    {
        return Address::URL.'?address='.urlencode($query)."&sensor=false&language=".substr(sfConfig::get('default_culture'),0,2);
    }

    public static function buildCountryUrl($country = null){
        if(isset($country)){
            // united kingdom
            ($country == 'gb') ? $region = 'uk' : $region = $country;
            //$countries = sfCultureInfo::getInstance($region)->getCountries(null);
            $mcf = new MysfCultureInfo();
            $culture = $mcf->getIsoByCountry(strtoupper($country));
            $country = sfCultureInfo::getInstance(substr($culture,0,2))->getCountry(substr($culture,3,2));
            return Address::URL.'?address='.urlencode($country)."&sensor=false&region=".$region;

        }

    }


    public static function retrieveGeocodesFromUrl($url)
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_HEADER,0); //Change this to a 1 to return headers

        if(sfConfig::has('app_curl_options_proxy_address')){
            curl_setopt($ch, CURLOPT_PROXY, sfConfig::get('app_curl_options_proxy_address'));
        }
        if(sfConfig::has('app_curl_options_proxy_port')){
            curl_setopt($ch, CURLOPT_PROXYPORT, sfConfig::get('app_curl_options_proxy_port'));
        }
        $response = curl_exec($ch);

        curl_close($ch);
        $codes = json_decode($response);

        if($codes->status == 'OK'){
            $results = $codes->results;
        }
        else{
            $results['result'][] = false;
        }

        return $results;
    }


}
