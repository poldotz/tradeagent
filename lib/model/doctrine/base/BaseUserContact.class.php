<?php

/**
 * BaseUserContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property bigint $sf_guard_user_id
 * @property bigint $contact_id
 * @property string $value
 * @property sfGuardUser $User
 * @property Contact $Contact
 * 
 * @method bigint      getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method bigint      getContactId()        Returns the current record's "contact_id" value
 * @method string      getValue()            Returns the current record's "value" value
 * @method sfGuardUser getUser()             Returns the current record's "User" value
 * @method Contact     getContact()          Returns the current record's "Contact" value
 * @method UserContact setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method UserContact setContactId()        Sets the current record's "contact_id" value
 * @method UserContact setValue()            Sets the current record's "value" value
 * @method UserContact setUser()             Sets the current record's "User" value
 * @method UserContact setContact()          Sets the current record's "Contact" value
 * 
 * @package    tradeagent
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_contact');
        $this->hasColumn('sf_guard_user_id', 'bigint', null, array(
             'type' => 'bigint',
             'primary' => true,
             ));
        $this->hasColumn('contact_id', 'bigint', null, array(
             'type' => 'bigint',
             'primary' => true,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'sf_guard_user_id',
             'foreign' => 'id'));

        $this->hasOne('Contact', array(
             'local' => 'contact_id',
             'foreign' => 'id'));
    }
}