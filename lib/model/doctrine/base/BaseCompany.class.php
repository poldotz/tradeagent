<?php

/**
 * BaseCompany
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $slogan
 * @property clob $description
 * @property string $vat
 * @property string $fc
 * @property string $iban
 * @property bigint $address_id
 * @property boolean $is_customer
 * @property bigint $gallery_id
 * @property Gallery $Gallery
 * @property Address $Address
 * @property Doctrine_Collection $CompanyAgent
 * @property Doctrine_Collection $company_product
 * @property Doctrine_Collection $OrderDetail
 * @property Doctrine_Collection $company_contact
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getSlogan()          Returns the current record's "slogan" value
 * @method clob                getDescription()     Returns the current record's "description" value
 * @method string              getVat()             Returns the current record's "vat" value
 * @method string              getFc()              Returns the current record's "fc" value
 * @method string              getIban()            Returns the current record's "iban" value
 * @method bigint              getAddressId()       Returns the current record's "address_id" value
 * @method boolean             getIsCustomer()      Returns the current record's "is_customer" value
 * @method bigint              getGalleryId()       Returns the current record's "gallery_id" value
 * @method Gallery             getGallery()         Returns the current record's "Gallery" value
 * @method Address             getAddress()         Returns the current record's "Address" value
 * @method Doctrine_Collection getCompanyAgent()    Returns the current record's "CompanyAgent" collection
 * @method Doctrine_Collection getCompanyProduct()  Returns the current record's "company_product" collection
 * @method Doctrine_Collection getOrderDetail()     Returns the current record's "OrderDetail" collection
 * @method Doctrine_Collection getCompanyContact()  Returns the current record's "company_contact" collection
 * @method Company             setName()            Sets the current record's "name" value
 * @method Company             setSlogan()          Sets the current record's "slogan" value
 * @method Company             setDescription()     Sets the current record's "description" value
 * @method Company             setVat()             Sets the current record's "vat" value
 * @method Company             setFc()              Sets the current record's "fc" value
 * @method Company             setIban()            Sets the current record's "iban" value
 * @method Company             setAddressId()       Sets the current record's "address_id" value
 * @method Company             setIsCustomer()      Sets the current record's "is_customer" value
 * @method Company             setGalleryId()       Sets the current record's "gallery_id" value
 * @method Company             setGallery()         Sets the current record's "Gallery" value
 * @method Company             setAddress()         Sets the current record's "Address" value
 * @method Company             setCompanyAgent()    Sets the current record's "CompanyAgent" collection
 * @method Company             setCompanyProduct()  Sets the current record's "company_product" collection
 * @method Company             setOrderDetail()     Sets the current record's "OrderDetail" collection
 * @method Company             setCompanyContact()  Sets the current record's "company_contact" collection
 * 
 * @package    tradeagent
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompany extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 100,
             ));
        $this->hasColumn('slogan', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('vat', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('fc', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('iban', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('address_id', 'bigint', null, array(
             'type' => 'bigint',
             ));
        $this->hasColumn('is_customer', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('gallery_id', 'bigint', null, array(
             'type' => 'bigint',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Gallery', array(
             'local' => 'gallery_id',
             'foreign' => 'id'));

        $this->hasOne('Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasMany('CompanyAgent', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Product as company_product', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('OrderDetail', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('CompanyContact as company_contact', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $taggable0 = new Doctrine_Template_Taggable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($taggable0);
        $this->actAs($sluggable0);
    }
}