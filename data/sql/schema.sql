CREATE TABLE address (id BIGINT AUTO_INCREMENT, route VARCHAR(255), city VARCHAR(100), province VARCHAR(100), region VARCHAR(100), country VARCHAR(100), postal_code VARCHAR(10), latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE agent (id BIGINT AUTO_INCREMENT, name VARCHAR(50), surname VARCHAR(50), vat VARCHAR(20), cf VARCHAR(20), iban VARCHAR(20), sf_guard_user_id bigint, address_id bigint, INDEX address_id_idx (address_id), INDEX sf_guard_user_id_idx (sf_guard_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category (id BIGINT AUTO_INCREMENT, name VARCHAR(255), slug VARCHAR(255), root_id BIGINT, lft INT, rgt INT, level SMALLINT, UNIQUE INDEX category_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE taggable_tag (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE company_taggable_tag (id BIGINT, tag_id BIGINT, PRIMARY KEY(id, tag_id)) ENGINE = INNODB;
CREATE TABLE company (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL UNIQUE, slogan VARCHAR(255), description LONGTEXT, vat VARCHAR(20), fc VARCHAR(20), iban VARCHAR(20), address_id bigint, is_customer TINYINT(1), gallery_id bigint, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX company_sluggable_idx (slug), INDEX gallery_id_idx (gallery_id), INDEX address_id_idx (address_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE company_agent (company_id bigint, agent_id bigint, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(company_id, agent_id)) ENGINE = INNODB;
CREATE TABLE company_contact (company_id bigint, contact_id bigint, value VARCHAR(255), PRIMARY KEY(company_id, contact_id)) ENGINE = INNODB;
CREATE TABLE company_social (company_id bigint, social_id bigint, value VARCHAR(255), PRIMARY KEY(company_id, social_id)) ENGINE = INNODB;
CREATE TABLE configuration (id BIGINT AUTO_INCREMENT, name VARCHAR(100), value VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contact (id BIGINT AUTO_INCREMENT, name VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE discount_type (id BIGINT AUTO_INCREMENT, name VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE gallery (id BIGINT AUTO_INCREMENT, title VARCHAR(255), description VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX gallery_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE order_detail_version (order_id bigint, product_id bigint, quantity BIGINT, discount DECIMAL(5, 2) DEFAULT 0, company_id bigint, agent_id bigint, discount_type_id bigint, note VARCHAR(255), created_by BIGINT NOT NULL, updated_by BIGINT NOT NULL, version BIGINT, PRIMARY KEY(order_id, product_id, version)) ENGINE = INNODB;
CREATE TABLE order_detail (order_id bigint, product_id bigint, quantity BIGINT, discount DECIMAL(5, 2) DEFAULT 0, company_id bigint, agent_id bigint, discount_type_id bigint, note VARCHAR(255), created_by BIGINT NOT NULL, updated_by BIGINT NOT NULL, version BIGINT, deleted_at DATETIME, INDEX company_id_idx (company_id), INDEX agent_id_idx (agent_id), INDEX discount_type_id_idx (discount_type_id), PRIMARY KEY(order_id, product_id)) ENGINE = INNODB;
CREATE TABLE order_status (id BIGINT AUTO_INCREMENT, name VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE photos (id BIGINT AUTO_INCREMENT, title VARCHAR(255), picpath VARCHAR(255), gallery_id bigint, is_default TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX photos_sluggable_idx (slug), INDEX gallery_id_idx (gallery_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE product_taggable_tag (id BIGINT, tag_id BIGINT, PRIMARY KEY(id, tag_id)) ENGINE = INNODB;
CREATE TABLE product (id BIGINT AUTO_INCREMENT, code VARCHAR(50), name VARCHAR(255), description LONGTEXT, quantity bigint, price DECIMAL(5, 2) DEFAULT 0, offer_price DECIMAL(5, 2) DEFAULT 0, offer_end_date datetime, category_id bigint, company_id bigint, gallery_id bigint, created_by BIGINT NOT NULL, updated_by BIGINT NOT NULL, slug VARCHAR(255), deleted_at DATETIME, UNIQUE INDEX product_sluggable_idx (slug), INDEX gallery_id_idx (gallery_id), INDEX category_id_idx (category_id), INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE product_order_version (id BIGINT, number VARCHAR(100), purchase_date DATE, agent_id bigint, customer_id bigint, company_id bigint, status_order_id bigint, created_by BIGINT NOT NULL, updated_by BIGINT NOT NULL, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE product_order (id BIGINT AUTO_INCREMENT, number VARCHAR(100), purchase_date DATE, agent_id bigint, customer_id bigint, company_id bigint, status_order_id bigint, created_by BIGINT NOT NULL, updated_by BIGINT NOT NULL, version BIGINT, deleted_at DATETIME, INDEX agent_id_idx (agent_id), INDEX status_order_id_idx (status_order_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE social (id BIGINT AUTO_INCREMENT, name VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_contact (sf_guard_user_id bigint, contact_id bigint, value VARCHAR(255), PRIMARY KEY(sf_guard_user_id, contact_id)) ENGINE = INNODB;
CREATE TABLE user_social (sf_guard_user_id bigint, social_id bigint, value VARCHAR(255), PRIMARY KEY(sf_guard_user_id, social_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE agent ADD CONSTRAINT agent_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE agent ADD CONSTRAINT agent_address_id_address_id FOREIGN KEY (address_id) REFERENCES address(id);
ALTER TABLE company_taggable_tag ADD CONSTRAINT company_taggable_tag_tag_id_taggable_tag_id FOREIGN KEY (tag_id) REFERENCES taggable_tag(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE company_taggable_tag ADD CONSTRAINT company_taggable_tag_id_company_id FOREIGN KEY (id) REFERENCES company(id);
ALTER TABLE company ADD CONSTRAINT company_gallery_id_gallery_id FOREIGN KEY (gallery_id) REFERENCES gallery(id);
ALTER TABLE company ADD CONSTRAINT company_address_id_address_id FOREIGN KEY (address_id) REFERENCES address(id);
ALTER TABLE company_agent ADD CONSTRAINT company_agent_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_agent ADD CONSTRAINT company_agent_agent_id_agent_id FOREIGN KEY (agent_id) REFERENCES agent(id) ON DELETE CASCADE;
ALTER TABLE company_contact ADD CONSTRAINT company_contact_contact_id_contact_id FOREIGN KEY (contact_id) REFERENCES contact(id);
ALTER TABLE company_contact ADD CONSTRAINT company_contact_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id);
ALTER TABLE company_social ADD CONSTRAINT company_social_social_id_social_id FOREIGN KEY (social_id) REFERENCES social(id);
ALTER TABLE company_social ADD CONSTRAINT company_social_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id);
ALTER TABLE order_detail_version ADD CONSTRAINT order_detail_version_order_id_order_detail_order_id FOREIGN KEY (order_id) REFERENCES order_detail(order_id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE order_detail ADD CONSTRAINT order_detail_discount_type_id_discount_type_id FOREIGN KEY (discount_type_id) REFERENCES discount_type(id);
ALTER TABLE order_detail ADD CONSTRAINT order_detail_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id);
ALTER TABLE order_detail ADD CONSTRAINT order_detail_agent_id_agent_id FOREIGN KEY (agent_id) REFERENCES agent(id);
ALTER TABLE photos ADD CONSTRAINT photos_gallery_id_gallery_id FOREIGN KEY (gallery_id) REFERENCES gallery(id) ON DELETE CASCADE;
ALTER TABLE product_taggable_tag ADD CONSTRAINT product_taggable_tag_tag_id_taggable_tag_id FOREIGN KEY (tag_id) REFERENCES taggable_tag(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE product_taggable_tag ADD CONSTRAINT product_taggable_tag_id_product_id FOREIGN KEY (id) REFERENCES product(id);
ALTER TABLE product ADD CONSTRAINT product_gallery_id_gallery_id FOREIGN KEY (gallery_id) REFERENCES gallery(id);
ALTER TABLE product ADD CONSTRAINT product_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id);
ALTER TABLE product ADD CONSTRAINT product_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE product_order_version ADD CONSTRAINT product_order_version_id_product_order_id FOREIGN KEY (id) REFERENCES product_order(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE product_order ADD CONSTRAINT product_order_status_order_id_order_status_id FOREIGN KEY (status_order_id) REFERENCES order_status(id);
ALTER TABLE product_order ADD CONSTRAINT product_order_agent_id_agent_id FOREIGN KEY (agent_id) REFERENCES agent(id);
ALTER TABLE user_contact ADD CONSTRAINT user_contact_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_contact ADD CONSTRAINT user_contact_contact_id_contact_id FOREIGN KEY (contact_id) REFERENCES contact(id);
ALTER TABLE user_social ADD CONSTRAINT user_social_social_id_social_id FOREIGN KEY (social_id) REFERENCES social(id);
ALTER TABLE user_social ADD CONSTRAINT user_social_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
